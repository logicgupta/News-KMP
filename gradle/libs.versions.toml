[versions]
agp = "8.2.0"
kotlin = "1.9.20"
compose = "1.5.4"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
uiGraphicsAndroid = "1.5.4"
jetbrains-compose = "1.5.11"
ktor = "2.3.7"
coroutines = "1.7.3"
koin = "3.2.0"
build-konfig = "0.15.1"
kotlinCompilerExtensionVersion = "1.5.8"
core-ktx = "1.12.0"
junit = "4.13.2"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
appcompat = "1.6.1"
material = "1.11.0"
kermit = "2.0.2"
moko = "0.23.0"
core = "1.12.0"
moko-mvvm = "0.16.1"
coil = "2.5.0"
kamel = "0.9.1"
lifecycleViewmodelCompose = "2.7.0"
sqldelight = "2.0.1"
store5 = "5.0.0"
storageSettings = "1.1.1"
kotlin-datetime = "0.5.0"
ktlint-gradle = "12.1.0"


[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-ui-graphics-android = { group = "androidx.compose.ui", name = "ui-graphics-android", version.ref = "uiGraphicsAndroid" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
build-konfig = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "build-konfig" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }

## Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }

## Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

## Logger
touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

## moko
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko" }
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko" }
moko-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }
moko-resources-test = { module = "dev.icerock.moko:resources-test", version.ref = "moko" }
moko-mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko-mvvm" }
moko-mvvm-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
moko-mvvm-flow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "moko-mvvm" }
moko-mvvm-flow-compose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "moko-mvvm" }
androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }

## Coil (Image Loading)
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
## Kamel
kamel = { module = "media.kamel:kamel-image", version.ref = "kamel" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }

##  SQL Delight
android-sqldelight = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
ios-sqldelight = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
jvm-sqldelight = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sql-delight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

## Store5 https://mobilenativefoundation.github.io/Store/
store = { module = "org.mobilenativefoundation.store:store5", version.ref = "store5" }

## Multiplatform settings https://github.com/russhwolf/multiplatform-settings
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "storageSettings" }
multiplatform-settings-couroutine = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "storageSettings" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }
## Build Field runtime generation same as
build-konfig = { id = "com.codingfeline.buildkonfig" }
## moko
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sql-delight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }


[bundles]
ktor-android = [
    "ktor-client-okhttp"
]
ktor-ios = [
    "ktor-client-darwin"
]
ktor-common = [
    "ktor-client-core",
    "ktor-serialization",
    "ktor-client-content-negotiation",
    "ktor-client-logging",
    "ktor-client-auth",
    "ktor-client-encoding"
]

moko-common = [
    "moko-resources",
    "moko-compose",
    "moko-mvvm-core",
    "moko-mvvm-compose",
    "moko-mvvm-flow",
    "moko-mvvm-flow-compose"
]

sqldelight-common = [
    "sqldelight-runtime",
    "sql-delight-coroutines"
]